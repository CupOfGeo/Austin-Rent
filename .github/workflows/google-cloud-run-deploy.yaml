name: Build and Deploy to Cloud Run

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: 'App name to be deployed'
        required: true
        default: 'bs-crawler'
        type: choice
        options:
          - 'bs-crawler'

env:
  PROJECT_ID: "Austin-Rent"
  GAR_LOCATION: "us-central1"
  REGION: 'us-central1'
  REPO: 'image-repo'

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
          username: 'oauth2accesstoken'
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and Push
        run: |-
          cd ${{ github.event.inputs.app_name }}/
          docker build --target BUILD -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ github.event.inputs.app_name }}:latest" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ github.event.inputs.app_name }}:latest"


      # END - Docker auth and build

      - name: Deploy Backend to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ github.event.inputs.app_name }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ github.event.inputs.app_name }}:latest

      - name: Show Backend URL
        run: echo ${{ steps.deploy.outputs.url }}
